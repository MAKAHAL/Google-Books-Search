{"ast":null,"code":"import _defineProperty from \"/Users/makahabutahoun/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/makahabutahoun/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/makahabutahoun/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/makahabutahoun/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/makahabutahoun/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/makahabutahoun/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/makahabutahoun/Google-Books-Search/client/src/pages/Search.js\";\nimport React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport API from \"../utils/API\";\nimport { Query } from \"mongoose\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      Query: \"\",\n      message: \"Search \"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.getBooks = function () {\n      API.getBooks(Query).then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function () {\n        return _this.setState({\n          books: [],\n          message: \"No New Books Found, Try a Different Query\"\n        });\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.getBooks(_this.state.search);\n    };\n\n    _this.handleBookSave = function (id) {\n      var book = _this.state.books.find(function (book) {\n        return book.id === id;\n      });\n\n      API.saveBook({\n        googleId: book.id,\n        title: book.volumeInfo.title,\n        subtitle: book.volumeInfo.subtitle,\n        link: book.volumeInfo.infoLink,\n        authors: book.volumeInfo.authors,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks.thumbnail\n      }).then(function () {\n        return _this.getBooks();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Form, {\n        search: this.state.search,\n        handleInputChange: this.handleInputChange,\n        handleFormSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Results\"), React.createElement(Results, {\n        books: this.state.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/makahabutahoun/Google-Books-Search/client/src/pages/Search.js"],"names":["React","Form","Results","API","Query","Search","state","books","message","handleInputChange","event","target","name","value","setState","getBooks","then","res","data","catch","handleFormSubmit","preventDefault","search","handleBookSave","id","book","find","saveBook","googleId","title","volumeInfo","subtitle","link","infoLink","authors","description","image","imageLinks","thumbnail","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,KAAT,QAAsB,UAAtB;;IAEMC,M;;;;;;;;;;;;;;;;;UAEEC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENH,MAAAA,KAAK,EAAE,EAFD;AAGNI,MAAAA,OAAO,EAAE;AAHH,K;;UAMRC,iB,GAAoB,UAAAC,KAAK,EAAI;AAAA,0BACHA,KAAK,CAACC,MADH;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAAA,UACbC,KADa,iBACbA,KADa;;AAE3B,YAAKC,QAAL,qBACGF,IADH,EACUC,KADV;AAGD,K;;UAEDE,Q,GAAW,YAAM;AACfZ,MAAAA,GAAG,CAACY,QAAJ,CAAaX,KAAb,EACGY,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKH,QAAL,CAAc;AACZP,UAAAA,KAAK,EAAEU,GAAG,CAACC;AADC,SAAd,CADO;AAAA,OADX,EAMGC,KANH,CAMS;AAAA,eACL,MAAKL,QAAL,CAAc;AACZP,UAAAA,KAAK,EAAE,EADK;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd,CADK;AAAA,OANT;AAYD,K;;UAEDY,gB,GAAmB,UAAAV,KAAK,EAAI;AAC1BA,MAAAA,KAAK,CAACW,cAAN;;AACA,YAAKN,QAAL,CAAc,MAAKT,KAAL,CAAWgB,MAAzB;AACD,K;;UAEDC,c,GAAiB,UAAAC,EAAE,EAAI;AACrB,UAAMC,IAAI,GAAG,MAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,IAAjB,CAAsB,UAAAD,IAAI;AAAA,eAAIA,IAAI,CAACD,EAAL,KAAYA,EAAhB;AAAA,OAA1B,CAAb;;AAEArB,MAAAA,GAAG,CAACwB,QAAJ,CAAa;AACXC,QAAAA,QAAQ,EAAEH,IAAI,CAACD,EADJ;AAEXK,QAAAA,KAAK,EAAEJ,IAAI,CAACK,UAAL,CAAgBD,KAFZ;AAGXE,QAAAA,QAAQ,EAAEN,IAAI,CAACK,UAAL,CAAgBC,QAHf;AAIXC,QAAAA,IAAI,EAAEP,IAAI,CAACK,UAAL,CAAgBG,QAJX;AAKXC,QAAAA,OAAO,EAAET,IAAI,CAACK,UAAL,CAAgBI,OALd;AAMXC,QAAAA,WAAW,EAAEV,IAAI,CAACK,UAAL,CAAgBK,WANlB;AAOXC,QAAAA,KAAK,EAAEX,IAAI,CAACK,UAAL,CAAgBO,UAAhB,CAA2BC;AAPvB,OAAb,EAQGtB,IARH,CAQQ;AAAA,eAAM,MAAKD,QAAL,EAAN;AAAA,OARR;AASD,K;;;;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWgB,MADvB;AAEI,QAAA,iBAAiB,EAAE,KAAKb,iBAF5B;AAGI,QAAA,gBAAgB,EAAE,KAAKW,gBAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,CADJ;AAaH;;;;EA/DYP,KAAK,CAACuC,S;;AAqE3B,eAAelC,MAAf","sourcesContent":["import React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport API from \"../utils/API\";\nimport { Query } from \"mongoose\";\n\nclass Search extends React.Component {\n   \n        state = {\n          books: [],\n          Query: \"\",\n          message: \"Search \"\n        };\n      \n        handleInputChange = event => {\n          const { name, value } = event.target;\n          this.setState({\n            [name]: value\n          });\n        };\n      \n        getBooks = () => {\n          API.getBooks(Query)\n            .then(res =>\n              this.setState({\n                books: res.data\n              })\n            )\n            .catch(() =>\n              this.setState({\n                books: [],\n                message: \"No New Books Found, Try a Different Query\"\n              })\n            );\n        };\n      \n        handleFormSubmit = event => {\n          event.preventDefault();\n          this.getBooks(this.state.search);\n        };\n      \n        handleBookSave = id => {\n          const book = this.state.books.find(book => book.id === id);\n      \n          API.saveBook({\n            googleId: book.id,\n            title: book.volumeInfo.title,\n            subtitle: book.volumeInfo.subtitle,\n            link: book.volumeInfo.infoLink,\n            authors: book.volumeInfo.authors,\n            description: book.volumeInfo.description,\n            image: book.volumeInfo.imageLinks.thumbnail\n          }).then(() => this.getBooks());\n        };\n      \n        render() {\n            return (\n                <div>\n                    <Form\n                        search={this.state.search}\n                        handleInputChange={this.handleInputChange}\n                        handleFormSubmit={this.handleFormSubmit}\n                    />\n                    <div className=\"container\">\n                        <h2>Results</h2>\n                        <Results books={this.state.books} />\n                    </div>\n                </div>\n            )\n        }\n    }\n        \n      \n      \n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}