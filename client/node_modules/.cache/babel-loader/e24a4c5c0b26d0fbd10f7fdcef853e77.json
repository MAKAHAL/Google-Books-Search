{"ast":null,"code":"import _regeneratorRuntime from \"/Users/makahabutahoun/Google-Books-Search/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/makahabutahoun/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/makahabutahoun/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/makahabutahoun/Google-Books-Search/client/src/pages/Search.js\";\nimport React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport API from \"../utils/API\"; // class Search extends React.Component {\n//     state = {\n//         value: \"\",\n//         books: []\n//     };\n//     componentDidMount() {\n//         this.searchBook();\n//     }\n//     makeBook = bookData => {\n//         return {\n//             _id: bookData.id,\n//             title: bookData.volumeInfo.title,\n//             authors: bookData.volumeInfo.authors,\n//             description: bookData.volumeInfo.description,\n//             image: bookData.volumeInfo.imageLinks.thumbnail,\n//             link: bookData.volumeInfo.previewLink\n//         }\n//     }\n//     searchBook = query => {\n//         API.getBook(query)\n//             .then(res => this.setState({ books: res.data.items.map(bookData => this.makeBook(bookData)) }))\n//             .catch(err => console.error(err));\n//     };\n//     handleInputChange = event => {\n//         const name = event.target.name;\n//         const value = event.target.value;\n//         this.setState({\n//             [name]: value\n//         });\n//     };\n//     handleFormSubmit = event => {\n//         event.preventDefault();\n//         this.searchBook(this.state.search);\n//     };\n//     render() {\n//         return (\n//             <div>\n//                 <Form\n//                     search={this.state.search}\n//                     handleInputChange={this.handleInputChange}\n//                     handleFormSubmit={this.handleFormSubmit}\n//                 />\n//                 <div className=\"container\">\n//                     <h2>Results</h2>\n//                     <Results books={this.state.books} />\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// export default Search;\n\nResults = function Results() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      SearchInput = _useState4[0],\n      setSearchinput = _useState4[1];\n\n  useEffect(function () {\n    loadBooks(SearchInput);\n  }, []);\n\n  var loadBooks =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(query) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(query);\n              _context.prev = 1;\n              _context.next = 4;\n              return API.searchBook(query);\n\n            case 4:\n              response = _context.sent;\n              setBooks(response.data.items);\n              _context.next = 13;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.group(\"Load BOoOOOks\");\n              console.log(_context.t0);\n              console.groupEnd();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function loadBooks(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); //function for handling the search input\n\n\n  var handleInputChange = function handleInputChange(event) {\n    var value = event.target.value;\n    setSearchinput(value);\n  }; //function for handling the search button\n\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    event.preventDefault();\n    setSearchinput();\n    loadBooks(SearchInput);\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Col, {\n    size: \" ms-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Form, {\n    SearchInput: SearchInput,\n    handleInputChange: handleInputChange,\n    handleFormSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(Col, {\n    size: \"md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, books.length ? React.createElement(ResultList, {\n    books: books,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }) : null)));\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/makahabutahoun/Google-Books-Search/client/src/pages/Search.js"],"names":["React","Form","Results","API","useState","books","setBooks","SearchInput","setSearchinput","useEffect","loadBooks","query","console","log","searchBook","response","data","items","group","groupEnd","handleInputChange","event","value","target","handleFormSubmit","preventDefault","length"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAD,OAAO,GAAG,mBAAM;AAAA,kBAEYE,QAAQ,CAAE,EAAF,CAFpB;AAAA;AAAA,MAEPC,KAFO;AAAA,MAEAC,QAFA;;AAAA,mBAG0BF,QAAQ,CAAC,EAAD,CAHlC;AAAA;AAAA,MAGLG,WAHK;AAAA,MAGQC,cAHR;;AAKZC,EAAAA,SAAS,CAAE,YAAK;AACZC,IAAAA,SAAS,CAAEH,WAAF,CAAT;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMG,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AADc;AAAA;AAAA,qBAGaR,GAAG,CAACW,UAAJ,CAAeH,KAAf,CAHb;;AAAA;AAGJI,cAAAA,QAHI;AAIVT,cAAAA,QAAQ,CAACS,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAR;AAJU;AAAA;;AAAA;AAAA;AAAA;AAOVL,cAAAA,OAAO,CAACM,KAAR,CAAe,eAAf;AACAN,cAAAA,OAAO,CAACC,GAAR;AACAD,cAAAA,OAAO,CAACO,QAAR;;AATU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATT,SAAS;AAAA;AAAA;AAAA,KAAf,CATY,CAqBR;;;AACA,MAAOU,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAAA,QACxBC,KADwB,GACdD,KAAK,CAACE,MADQ,CACxBD,KADwB;AAEhCd,IAAAA,cAAc,CACTc,KADS,CAAd;AAID,GANH,CAtBQ,CA8BN;;;AACA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAH,KAAK,EAAI;AAChCA,IAAAA,KAAK,CAACI,cAAN;AACAjB,IAAAA,cAAc;AACdE,IAAAA,SAAS,CAACH,WAAD,CAAT;AACD,GAJD;;AASJ,SAEM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACA,IAAA,WAAW,EAAIA,WADf;AAEA,IAAA,iBAAiB,EAAIa,iBAFrB;AAGA,IAAA,gBAAgB,EAAII,gBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EASI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCnB,KAAK,CAACqB,MAAN,GAAc,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAErB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAA4C,IAD7C,CATJ,CADJ,CAFN;AAwBD,CAhEL;;AAkEA,eAAeH,OAAf","sourcesContent":["import React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport API from \"../utils/API\";\n\n// class Search extends React.Component {\n//     state = {\n//         value: \"\",\n//         books: []\n//     };\n\n//     componentDidMount() {\n//         this.searchBook();\n//     }\n\n//     makeBook = bookData => {\n//         return {\n//             _id: bookData.id,\n//             title: bookData.volumeInfo.title,\n//             authors: bookData.volumeInfo.authors,\n//             description: bookData.volumeInfo.description,\n//             image: bookData.volumeInfo.imageLinks.thumbnail,\n//             link: bookData.volumeInfo.previewLink\n//         }\n//     }\n\n//     searchBook = query => {\n//         API.getBook(query)\n//             .then(res => this.setState({ books: res.data.items.map(bookData => this.makeBook(bookData)) }))\n//             .catch(err => console.error(err));\n//     };\n\n//     handleInputChange = event => {\n//         const name = event.target.name;\n//         const value = event.target.value;\n//         this.setState({\n//             [name]: value\n//         });\n//     };\n\n//     handleFormSubmit = event => {\n//         event.preventDefault();\n//         this.searchBook(this.state.search);\n//     };\n\n//     render() {\n//         return (\n//             <div>\n//                 <Form\n//                     search={this.state.search}\n//                     handleInputChange={this.handleInputChange}\n//                     handleFormSubmit={this.handleFormSubmit}\n//                 />\n//                 <div className=\"container\">\n//                     <h2>Results</h2>\n//                     <Results books={this.state.books} />\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n// export default Search;\n\nResults = () => {\n\n    let [books, setBooks] = useState ([]);\n    const [SearchInput, setSearchinput] = useState(\"\");\n\n    useEffect (()=> {\n        loadBooks (SearchInput);\n    }, []);\n\n    const loadBooks = async (query) => {\n        console.log(query)\n        try {\n            const response = await API.searchBook(query);\n            setBooks(response.data.items)\n        \n        }catch (error) {\n            console.group (\"Load BOoOOOks\");\n            console.log(error)\n            console.groupEnd();\n        }\n    };\n        //function for handling the search input\n        const  handleInputChange = event => {\n            const { value } = event.target;\n            setSearchinput(\n                 value\n            );\n      \n          };\n      \n          //function for handling the search button\n          const handleFormSubmit = event => {\n            event.preventDefault();\n            setSearchinput();\n            loadBooks(SearchInput);\n          };\n\n          \n\n\n      return (\n       \n            <Container>\n                <Row>\n                    <Col size=\" ms-12\">\n                        <Form\n                        SearchInput = {SearchInput}\n                        handleInputChange = {handleInputChange}\n                        handleFormSubmit = {handleFormSubmit}\n                        />\n                    </Col>\n\n                    <Col size=\"md-12\">\n                    {books.length ?<ResultList books={books} />: null}\n                    </Col>\n                </Row>\n    \n            </Container>\n\n      \n\n\n      )\n\n    }\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}