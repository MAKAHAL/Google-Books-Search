{"ast":null,"code":"var _jsxFileName = \"/Users/makahabutahoun/Google-Books-Search/client/src/pages/Search.js\";\nimport React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport API from \"../utils/API\"; // class Search extends React.Component {\n//     state = {\n//         value: \"\",\n//         books: []\n//     };\n//     componentDidMount() {\n//         this.searchBook();\n//     }\n//     makeBook = bookData => {\n//         return {\n//             _id: bookData.id,\n//             title: bookData.volumeInfo.title,\n//             authors: bookData.volumeInfo.authors,\n//             description: bookData.volumeInfo.description,\n//             image: bookData.volumeInfo.imageLinks.thumbnail,\n//             link: bookData.volumeInfo.previewLink\n//         }\n//     }\n//     searchBook = query => {\n//         API.getBook(query)\n//             .then(res => this.setState({ books: res.data.items.map(bookData => this.makeBook(bookData)) }))\n//             .catch(err => console.error(err));\n//     };\n//     handleInputChange = event => {\n//         const name = event.target.name;\n//         const value = event.target.value;\n//         this.setState({\n//             [name]: value\n//         });\n//     };\n//     handleFormSubmit = event => {\n//         event.preventDefault();\n//         this.searchBook(this.state.search);\n//     };\n//     render() {\n//         return (\n//             <div>\n//                 <Form\n//                     search={this.state.search}\n//                     handleInputChange={this.handleInputChange}\n//                     handleFormSubmit={this.handleFormSubmit}\n//                 />\n//                 <div className=\"container\">\n//                     <h2>Results</h2>\n//                     <Results books={this.state.books} />\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// export default Search;\n\nimport PropTypes from 'prop-types';\n\nvar Search = function Search(_ref) {\n  var type = _ref.type,\n      query = _ref.query,\n      queryObject = _ref.queryObject;\n\n  var _type, _query;\n\n  var submit = function submit(e) {\n    e.preventDefault();\n    queryObject({\n      type: _type.value,\n      query: _query.value\n    });\n  };\n\n  var categoryChange = function categoryChange() {};\n\n  return React.createElement(\"nav\", {\n    className: \"search\",\n    \"aria-label\": \"Book search form\",\n    id: \"book-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"dropDown\",\n    \"aria-label\": \"Drop-down list for book search category\",\n    defaultValue: type,\n    ref: function ref(option) {\n      return _type = option;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    onClick: function onClick() {\n      return categoryChange();\n    },\n    value: \"q=intitle:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"option\", {\n    onClick: function onClick() {\n      return categoryChange();\n    },\n    value: \"q=inauthor:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Author\"), React.createElement(\"option\", {\n    onClick: function onClick() {\n      return categoryChange();\n    },\n    value: \"q=subject:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Subject\")), React.createElement(\"input\", {\n    className: \"searchText\",\n    \"aria-label\": \"Book search box\",\n    type: \"text\",\n    defaultValue: query,\n    ref: function ref(input) {\n      return _query = input;\n    },\n    placeholder: \"Enter search terms\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"searchButton\",\n    type: \"submit\",\n    value: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })));\n};\n\nSearch.propTypes = {\n  type: PropTypes.string,\n  query: PropTypes.string\n};\nexport default Search;","map":{"version":3,"sources":["/Users/makahabutahoun/Google-Books-Search/client/src/pages/Search.js"],"names":["React","Form","Results","API","PropTypes","Search","type","query","queryObject","_type","_query","submit","e","preventDefault","value","categoryChange","option","input","propTypes","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport API from \"../utils/API\";\n\n\n// class Search extends React.Component {\n//     state = {\n//         value: \"\",\n//         books: []\n//     };\n\n//     componentDidMount() {\n//         this.searchBook();\n        \n//     }\n  \n\n//     makeBook = bookData => {\n//         return {\n//             _id: bookData.id,\n//             title: bookData.volumeInfo.title,\n//             authors: bookData.volumeInfo.authors,\n//             description: bookData.volumeInfo.description,\n//             image: bookData.volumeInfo.imageLinks.thumbnail,\n//             link: bookData.volumeInfo.previewLink\n//         }\n//     }\n\n//     searchBook = query => {\n//         API.getBook(query)\n//             .then(res => this.setState({ books: res.data.items.map(bookData => this.makeBook(bookData)) }))\n//             .catch(err => console.error(err));\n//     };\n\n//     handleInputChange = event => {\n//         const name = event.target.name;\n//         const value = event.target.value;\n//         this.setState({\n//             [name]: value\n//         });\n//     };\n\n//     handleFormSubmit = event => {\n//         event.preventDefault();\n//         this.searchBook(this.state.search);\n//     };\n\n//     render() {\n//         return (\n//             <div>\n//                 <Form\n//                     search={this.state.search}\n//                     handleInputChange={this.handleInputChange}\n//                     handleFormSubmit={this.handleFormSubmit}\n//                 />\n//                 <div className=\"container\">\n//                     <h2>Results</h2>\n//                     <Results books={this.state.books} />\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n// export default Search;\nimport PropTypes from 'prop-types';\n\nconst Search = ({ type, query, queryObject }) => {\n\n    let _type, _query;\n\n    const submit = (e) => {\n        e.preventDefault();\n        queryObject({\n            type: _type.value,\n            query: _query.value\n        });\n    };\n\n    const categoryChange = () => {\n    }\n\n    return (\n        <nav className=\"search\" aria-label=\"Book search form\" id=\"book-form\">\n            <form onSubmit={submit}>\n                <select className=\"dropDown\" aria-label=\"Drop-down list for book search category\"\n                    defaultValue={type}\n                    ref={option => _type = option}>\n                    <option onClick={() => categoryChange()} value=\"q=intitle:\">Title</option>\n                    <option onClick={() => categoryChange()} value=\"q=inauthor:\">Author</option>\n                    <option onClick={() => categoryChange()} value=\"q=subject:\">Subject</option>\n                </select>\n                <input className=\"searchText\" aria-label=\"Book search box\"\n                    type=\"text\"\n                    defaultValue={query}\n                    ref={input => _query = input}\n                    placeholder=\"Enter search terms\"\n                    autoFocus />\n                <input className=\"searchButton\" type=\"submit\"\n                    value=\"Search\" />\n            </form>\n        </nav>\n    )\n}\n\nSearch.propTypes = {\n    type: PropTypes.string,\n    query: PropTypes.string\n};\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}